name: Public Release

on:
  release:
    types: [published]

jobs:
  public-release:
    name: "Public Release"
    runs-on: ubuntu-latest
    steps:
    - name: Install rename util
      run: sudo apt-get install -y rename
    
    - name: Copy Asset
      id: copy_asset
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        regex: true
        file: "^.*.uf2"
        target: 'output/'
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check files and name correctly
      run: |
        rename "s/\^.\*.uf2//g" output/*.uf2
        ls

    - name: Push to Another repo
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        GIT_CMD_REPOSITORY: "https://Playtronica:${{ secrets.API_TOKEN_GITHUB }}@github.com/Playtronica/biotron-releases"
      run: |
        git config --global user.name "Playtronica" 
        git config --global user.email "<>" 
        git clone "${{ env.GIT_CMD_REPOSITORY }}"
        
        cp -r output biotron-releases 
        cd biotron-releases
        
        git add . 
        git commit -m "${{ steps.copy_asset.outputs.name }}" \
          -m "TAG: ${{ steps.copy_asset.outputs.version }}" -m "Body: ${{ steps.copy_asset.outputs.body }}"
        git push -f "${{ env.GIT_CMD_REPOSITORY }}" --set-upstream "main"
        

    
      # uses: cpina/github-action-push-to-another-repository@main
      # env:
      #   API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      # with:
      #   source-directory: '.'
      #   destination-github-username: 'Playtronica'
      #   destination-repository-name: 'biotron-releases'
      #   commit-message: $"${{ join(steps.copy_asset.outputs.*, '\n') }}"

  

      
        
  
