name: versioning

on:
  push:
    branches: [ master ]

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: ubuntu-latest

    steps:
      - name: Ð¡heckout Repo
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      
      - name: Calculate new tag
        id: newtag
        run: |
          if [ "${{ steps.previoustag.outputs.tag }}" == "" ]; then
            echo "TAG_NAME=v0.0.0" | awk -F. -v OFS=. '{$NF += 1 ; print}' >> "$GITHUB_OUTPUT"
          else
            echo "TAG_NAME=${{ steps.previoustag.outputs.tag }}" | awk -F. -v OFS=. '{$NF += 1 ; print}' >> "$GITHUB_OUTPUT"
          fi
          
          CLEAN_TAG=${TAG_NAME#v}
      
          IFS='.' read -r MAJOR_VERSION MINOR_VERSION PATCH_VERSION <<< "$CLEAN_TAG"
      
          PATCH_VERSION=$((PATCH_VERSION + 1))

          echo "$MAJOR_VERSION"
          echo "$MINOR_VERSION"
          echo "$PATCH_VERSION"

          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV
          echo "MINOR_VERSION=$MINOR_VERSION" >> $GITHUB_ENV
          echo "PATCH_VERSION=$PATCH_VERSION" >> $GITHUB_ENV
          
      - name: "Build Firmware"
        run: |
          make release MAJOR_VERSION=${{ steps.newtag.outputs.MAJOR_VERSION }} \
          MINOR_VERSION=${{ steps.newtag.outputs.MINOR_VERSION }} \
          PATCH_VERSION=${{ steps.newtag.outputs.PATCH_VERSION }}
        
      - name: "Rename Firmware"
        run: cp output/*.uf2 ${{ github.event.repository.name }}_${{ steps.newtag.outputs.TAG_NAME }}.uf2

      - name: "Build & test"
        run: |
          echo "done!"
          
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.newtag.outputs.TAG_NAME }}"
          title: "Release ${{ steps.newtag.outputs.TAG_NAME }}"
          prerelease: true
          files: |
            *.uf2
      
      
  
